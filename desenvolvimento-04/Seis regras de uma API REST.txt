As seis regras de uma API REST são: 
1. Interface uniforme: Todos os pedidos feitos através de uma API REST devem respeitar as regras de formatação dessa API. Como cliente e servidor compartilham dessa interface, deve-se ter um contrato bem definido para a comunicação entre os lados. Para isso, é preciso ter uma interface que identifique e represente recursos, mensagens autodescritivas, assim como hypermidia(HATEOAS).
2. Separação cliente-servidor: As API REST necessitam que as aplicações cliente e servidor sejam totalmente independentes. O cliente só precisa saber o nome do recurso que deseja no espaço permitido pela API. Com exclusão disso, o único conhecimento que o cliente e o servidor têm um do outro é o que é trocado via transação da API.
3. Ausência de estado (stateless): Cada pedido deve conter todas as informações necessárias para o seu tratamento e o servidor não precisar conservar quaisquer informações sobre esse pedido após recebe-lo.
4. Armazenamento em cache: Mesmo sendo stateless, os recursos devem poder ser armazenados em um ou mais pontos dentro ou entre o cliente e servidor. Isso é necessário para reduzir o tempo médio de resposta, melhorar a eficiência, desempenho e escalabilidade da comunicação.
5. Arquitetura por camadas: Permite que a arquitetura seja menos complexa e altamente e altamente flexível. Cada camada é gerenciada de forma independente e mudanças não devem impactar as demais camadas.
6. Código sob demanda: É cada vez mais comum que o código seja entregue para execução no cliente, como objetos Java ou aplicações web JavaScript. Dessa forma, este código só poderá ser executado a pedido do cliente.